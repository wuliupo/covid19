{"version":3,"sources":["components/trend/index.tsx","pages/daily-trend/index.module.css","pages/daily-trend/index.tsx","utils/fetch.ts","hooks/data.ts","components/breadcrumb/index.tsx","components/breadcrumb/index.module.css"],"names":["Trend","height","React","useState","width","setWidth","hasRendered","setHasRendered","dailyData","useDailyData","data","useEffect","chart","Chart","container","autoFit","map","number","totalConfirmed","reportDate","type","deaths","total","scale","range","sync","min","nice","tooltip","showCrosshairs","shared","line","position","shape","color","val","render","bounds","onResize","contentRect","measureRef","ref","id","module","exports","DailyTrend","span","to","className","styles","mainContent","stickyColumns","stickyRows","trendTable","isNumeric","sort","a","b","moment","toDate","valueOf","deltaConfirmed","key","dense","toLocaleString","trendCard","BASE_URL","url","fetch","credentials","res","json","fetcher","config","useSWR","suspense","useOverallData","useConfirmData","useConfirmedDataByCountry","confirmedData","rest","normalizedData","useMemo","toPairs","groupBy","country","list","confirmed","sum","recovered","active","iso3","iso2","Breadcrumb","children","isArray","breadcrumb","childrenArray","reduce","acc","current","index","length","concat","seperator","push"],"mappings":"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","file":"static/js/7.a3a37888.chunk.js","sourcesContent":["import React from 'react';\nimport Measure from 'react-measure';\nimport { Chart } from '@antv/g2';\nimport { useDailyData } from '../../hooks/data';\n\nconst container = 'trend-chart';\n\nconst Trend: React.FC<{ height?: number }> = ({ height }) => {\n  const [width, setWidth] = React.useState<number>();\n  const [hasRendered, setHasRendered] = React.useState(false);\n  const { data: dailyData } = useDailyData();\n  React.useEffect(() => {\n    if (!dailyData || !width || hasRendered) {\n      return;\n    }\n    const chart = new Chart({\n      container,\n      autoFit: true,\n      height: height ?? (width / 971) * 800,\n    });\n    setHasRendered(true);\n    chart.data([\n      ...dailyData.map(({ totalConfirmed, reportDate }: any) => ({\n        number: totalConfirmed, reportDate, type: 'total confirmed',\n      })),\n      ...dailyData.map(({ reportDate, deaths }: any) => ({\n        reportDate, number: deaths.total, type: 'total deaths',\n      })),\n    ]);\n    chart.scale({\n      reportDate: {\n        range: [0, 1],\n        sync: true,\n      },\n      totalConfirmed: {\n        min: 0,\n        nice: true,\n        sync: true,\n      },\n      deaths: {\n        min: 0,\n        nice: true,\n        sync: true,\n      },\n    });\n    chart.tooltip({\n      showCrosshairs: true,\n      shared: true,\n    });\n    chart.line().position('reportDate*number').shape('smooth').color('type', (val) => {\n      if (val === 'total confirmed') {\n        return 'blue';\n      }\n\n      return 'red';\n    });\n\n    chart.render();\n  }, [dailyData, width, hasRendered, height]);\n\n  return (\n    <Measure\n      bounds\n      onResize={(contentRect) => {\n        if (contentRect.bounds) {\n          setWidth(contentRect.bounds.width);\n        }\n      }}\n    >\n      {({ measureRef }) => (\n        <div ref={measureRef} id={container} />\n      )}\n    </Measure>\n  );\n};\n\nexport default Trend;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trendCard\":\"daily-trend_trendCard__M5OiD\",\"trendTable\":\"daily-trend_trendTable__LvIiM\",\"mainContent\":\"daily-trend_mainContent__1c30Q\"};","import React from 'react';\nimport { Card } from '@rmwc/card';\nimport { Grid, GridRow, GridCell } from '@rmwc/grid';\nimport {\n  DataTable,\n  DataTableContent,\n  DataTableHead,\n  DataTableRow,\n  DataTableHeadCell,\n  DataTableCell,\n  DataTableBody,\n} from '@rmwc/data-table';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@rmwc/button';\nimport styles from './index.module.css';\nimport Trend from '../../components/trend';\nimport Breadcrumb from '../../components/breadcrumb';\nimport { useDailyData } from '../../hooks/data';\n\nconst DailyTrend: React.FC<{}> = () => {\n  const { data: dailyData } = useDailyData();\n\n  return (\n    <Grid>\n      <GridRow>\n        <GridCell span={12}>\n          <Breadcrumb>\n            <Link to=\"/\">Home</Link>\n            <span>Daily Trend</span>\n          </Breadcrumb>\n        </GridCell>\n      </GridRow>\n      <GridRow className={styles.mainContent}>\n        <GridCell span={8}>\n          <DataTable stickyColumns={1} stickyRows={1} className={styles.trendTable}>\n            <DataTableContent>\n              <DataTableHead>\n                <DataTableRow>\n                  <DataTableHeadCell>Date</DataTableHeadCell>\n                  <DataTableHeadCell isNumeric>Total Confirmed</DataTableHeadCell>\n                  <DataTableHeadCell isNumeric>New Cases</DataTableHeadCell>\n                  <DataTableHeadCell isNumeric>Total Deaths</DataTableHeadCell>\n                </DataTableRow>\n              </DataTableHead>\n              <DataTableBody>\n                {\n                  dailyData.sort(\n                    (a: any, b: any) => moment(b.reportDate).toDate().valueOf()\n                      - moment(a.reportDate).toDate().valueOf(),\n                  ).map(({\n                    reportDate, deltaConfirmed, deaths, totalConfirmed,\n                  }: any) => (\n                    <DataTableRow key={reportDate}>\n                      <DataTableCell>\n                        <Link to={`/daily-trend/${reportDate}`}>\n                          <Button dense>{reportDate}</Button>\n                        </Link>\n                      </DataTableCell>\n                      <DataTableCell isNumeric>{totalConfirmed?.toLocaleString()}</DataTableCell>\n                      <DataTableCell isNumeric>{deltaConfirmed?.toLocaleString()}</DataTableCell>\n                      <DataTableCell isNumeric>{deaths?.total?.toLocaleString()}</DataTableCell>\n                    </DataTableRow>\n                  ))\n                }\n              </DataTableBody>\n            </DataTableContent>\n          </DataTable>\n        </GridCell>\n        <GridCell span={4}>\n          <Card className={styles.trendCard}>\n            <Trend height={300} />\n          </Card>\n        </GridCell>\n      </GridRow>\n    </Grid>\n  );\n};\n\nexport default DailyTrend;\n","const BASE_URL = 'https://covid19.mathdro.id';\nasync function fetcher(url: string) {\n  const res = await fetch(`${BASE_URL}${url}`, {\n    credentials: 'same-origin',\n  });\n\n  return res.json();\n}\n\nexport default fetcher;\n","import useSWR, { ConfigInterface } from 'swr';\nimport React from 'react';\nimport groupBy from 'lodash/groupBy';\nimport toPairs from 'lodash/toPairs';\nimport sum from 'lodash/sum';\nimport fetcher from '../utils/fetch';\n\nfunction useDailyData(config: ConfigInterface = {}) {\n  return useSWR('/api/daily', fetcher, { suspense: true, ...config });\n}\n\nfunction useOverallData(config: ConfigInterface = {}) {\n  return useSWR('/api', fetcher, { suspense: true, ...config });\n}\n\nfunction useConfirmData(config: ConfigInterface = {}) {\n  return useSWR('/api/confirmed', fetcher, { suspense: true, ...config });\n}\n\nfunction useConfirmedDataByCountry() {\n  const { data: confirmedData, ...rest } = useConfirmData();\n  const normalizedData = React.useMemo(() => {\n    if (!confirmedData) {\n      return [];\n    }\n\n    return toPairs(groupBy(confirmedData, 'countryRegion')).map(([country, list]) => {\n      const confirmed = sum(list.map((data) => data.confirmed));\n      const recovered = sum(list.map((data) => data.recovered));\n      const deaths = sum(list.map((data) => data.deaths));\n      const active = sum(list.map((data) => data.active));\n\n      return {\n        country,\n        list,\n        confirmed,\n        recovered,\n        deaths,\n        active,\n        iso3: list?.[0]?.iso3,\n        iso2: list?.[0]?.iso2,\n      };\n    });\n  }, [confirmedData]);\n\n  return {\n    data: normalizedData,\n    ...rest,\n  };\n}\n\nexport {\n  useConfirmedDataByCountry,\n  useDailyData,\n  useOverallData,\n  useConfirmData,\n};\n","import React from 'react';\nimport isArray from 'lodash/isArray';\nimport styles from './index.module.css';\n\nconst Breadcrumb: React.FC<{}> = ({ children }) => {\n  if (!isArray(children)) {\n    return <div className={styles.breadcrumb}>{children}</div>;\n  }\n\n  const childrenArray = [...children as any];\n\n  return (\n    <div className={styles.breadcrumb}>\n      {childrenArray.reduce((acc, current, index) => {\n        if (index < childrenArray.length - 1) {\n          // eslint-disable-next-line\n          acc = acc.concat(\n            current,\n            <span className={styles.seperator}>/</span>,\n          );\n        } else {\n          acc.push(current);\n        }\n\n        return acc;\n      }, [])}\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumb\":\"breadcrumb_breadcrumb__3AUIj\",\"seperator\":\"breadcrumb_seperator__4tXv5\"};"],"sourceRoot":""}